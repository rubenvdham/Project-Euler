/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/



import java.util.ArrayList;
import java.util.List;

public class euler2 {



   static int sumEvenFibonacci(int maxValue){
        List sequence = new ArrayList();
        sequence.add(1);
        sequence.add(2);
        int sum = 2;
        while((int) sequence.get(sequence.size()-1) <= maxValue){
            int newNumber = (int) sequence.get(sequence.size()-1) + (int) sequence.get(sequence.size()-2);
            sequence.add(newNumber);
            if (newNumber%2 == 0){
                sum+=newNumber;
            }
        }
        return sum;

    }






    public static void main(String[] args){
        System.out.println(sumEvenFibonacci(4000000));

    }
}
