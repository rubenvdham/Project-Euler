/*

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

import java.util.ArrayList;


public class euler12 {

    static void initialize(){

    }


    static long smallestTriangleNumberWithDivisors(int minNumberOfDivisors) {
        //ArrayList triangles = new ArrayList();
        //long[] dividers = new long[minNumberOfDivisors];
        long[] triangles = new long[99999999];
        int index = 1;
        int numberDivisors;
        long sum;
        triangles[0]= 1;
        while (true) {
            numberDivisors = 0;
            sum = 0;
            /*
            for (int i = index + 1; i >= 1; i--) {
                sum += i;
            }*/
            sum = triangles[index] = triangles[index-1]+index+1;
            //find amount of dividers:
            for (long j = sum; j >= 1; j--) {
                if (sum % j == 0) {
                    numberDivisors += 1;
                    //dividers[j
                }
            }

            System.out.println(index);
            if (numberDivisors >= minNumberOfDivisors) {
                return sum;
            }

            index += 1;
        }
    }

    public static void main(String[] argv){
        long startTime = System.currentTimeMillis();
        System.out.println(smallestTriangleNumberWithDivisors(500));
        System.out.printf("Execution time: %d ms",System.currentTimeMillis()-startTime);
    }


}
