/*

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

public class euler12 {

    static long smallestTriangleNumberWithDivisors(int minNumberOfDivisors) {
        int numberDivisors;
        long currentTriangle = 0;
        for (int i = 1; i < Long.MAX_VALUE; i++) {
            currentTriangle+=i;
            numberDivisors = 0;
            for (int j = 1; j <= (int)Math.sqrt(currentTriangle); j++) { //until square root to find 2 pairs of divisors
                if (currentTriangle % j == 0 ) {
                    numberDivisors += 2;//add the pair
                }
            }
            if (Math.sqrt(currentTriangle) * Math.sqrt(currentTriangle) == currentTriangle){
                numberDivisors-=1;
            }
            if (numberDivisors >= minNumberOfDivisors){
                return i;
            }
        }
        return Long.MIN_VALUE;
    }

    public static void main(String[] argv){
        long startTime = System.currentTimeMillis();
        System.out.println(smallestTriangleNumberWithDivisors(500));
        System.out.printf("Execution time: %d ms",System.currentTimeMillis()-startTime);
    }
}